"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}!function(a){a.fn.animateCSS=function(t,n,o){return this.each(function(){var e=a(this);n&&"function"!=typeof n||(o=n,n=0);setTimeout(function(){e.addClass("animated "+t),"hidden"==e.css("visibility")&&e.css({visibility:"visible"}),e.is(":hidden")&&e.show(),e.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof o&&o.call(this)})},n)})}}(jQuery);var ContentBtns=[].concat(_toConsumableArray(document.querySelectorAll(".apart")));ContentBtns.forEach(function(t){t.onclick=function(){var e=t.getAttribute("data-id");$("#"+e).addClass("is-open")}});var closeBtnsContent=[].concat(_toConsumableArray(document.querySelectorAll(".close-content")));function getURL(e){if(null==e);else{var t=location.href;[].concat(_toConsumableArray(e.querySelectorAll("a"))).map(function(e){if(e.href===t)return e.classList.add("active-link")})}}closeBtnsContent.forEach(function(t){t.onclick=function(){var e=t.closest(".content-content");e.parentElement.classList.remove("is-open"),console.log(e.parentElement)}}),window.onclick=function(e){"content-content"===e.target.className&&e.target.classList.remove("is-open")},getURL(document.getElementById("menu-items"));var coll=document.getElementsByClassName("collapsible");for(i=0;i<coll.length;i++)coll[i].addEventListener("click",function(){this.classList.toggle("active");var e=this.nextElementSibling;e.style.maxHeight?(e.style.maxHeight=null,e.style.borderBottom=null):(e.style.maxHeight=e.scrollHeight+"px",e.style.borderBottom="1px solid #e0e0e0",console.log(e))});var i,c=document.getElementsByClassName("paper__article-preview");for(i=0;i<c.length;i++)c[i].addEventListener("click",function(){this.classList.toggle("active");var e=this.nextElementSibling;e.style.maxHeight?e.style.maxHeight=null:(e.style.maxHeight=e.scrollHeight+"px",console.log(e))});function c(e){console.log(e)}$(function(){$(window).scroll(function(){300<$(this).scrollTop()?($(".go-top").addClass("expand"),$(".page-header-alpha").addClass("scroll")):($(".go-top").removeClass("expand"),$(".page-header-alpha").removeClass("scroll"))}),$(".go-top").click(function(e){e.preventDefault(),$("html, body").animate({scrollTop:0},1e3)})});var $this=$(void 0);$("html").easeScroll(),$(document).ready(function(){$(".your-class").slick({infinite:!1,cssEase:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",speed:900,dots:!0,arrows:!1,centerMode:!0,centerPadding:"20%",slidesToShow:1,responsive:[{breakpoint:768,settings:{slidesToShow:1,centerMode:!0,centerPadding:"10%",speed:200}}]}),$(".slider").slick({infinite:!1,cssEase:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",speed:900,vertical:!0,verticalSwiping:!0,slidesToShow:1,slidesToScroll:1,dots:!0,prevArrow:!1,nextArrow:!1}),$(".text").slick({infinite:!1,speed:900,slidesToShow:1,slidesToScroll:1,dots:!0,prevArrow:!1,nextArrow:!1})}),jQuery(function(s){s.fn.hScroll=function(a){a=a||120,s(this).bind("DOMMouseScroll mousewheel",function(e){var t=e.originalEvent,n=t.detail?t.detail*-a:t.wheelDelta,o=s(this).scrollLeft();o+=0<n?-a:a,s(this).scrollLeft(o),e.preventDefault()})}}),$(document).ready(function(){$("#box").hScroll(60)});var modalBtns=[].concat(_toConsumableArray(document.querySelectorAll(".button")));modalBtns.forEach(function(t){t.onclick=function(){var e=t.getAttribute("data-modal");$("#"+e).addClass("is-open")}});var closeBtns=[].concat(_toConsumableArray(document.querySelectorAll(".close-contact")));closeBtns.forEach(function(t){t.onclick=function(){var e=t.closest(".modal");e.parentElement.classList.remove("is-open"),console.log(e.parentElement)}}),window.onclick=function(e){"modal"===e.target.className&&e.target.classList.remove("is-open")};var prevScrollpos=window.pageYOffset;window.onscroll=function(){var e=window.pageYOffset;prevScrollpos<e?e<300&&(document.getElementById("nav").style.transform="translateY(0px)"):document.getElementById("nav").style.transform="translateY(0px)",prevScrollpos=e};var wrapperMenu=document.querySelector(".wrapper-menu");function openTabs(e,t){var n,o;for(n=document.getElementsByClassName("tabcontent"),a=0;a<n.length;a++)n[a].style.display="none";for(o=document.getElementsByClassName("tablinks"),a=0;a<o.length;a++)o[a].className=o[a].className.replace(" active","");document.getElementById(t).style.display="block",e.currentTarget.className+=" active";var a=$("#"+t).data("img"),s=$("#"+t).data("name"),i=$("#"+t+" #img_tabs");$("#tabs-img").css("background-image","url("+a+")"),$("#tabs_text").html(s),i.css("background-image","url("+a+")"),console.log(a)}function openTabsP(e,t){var n,o;for(n=document.getElementsByClassName("tabcontent"),a=0;a<n.length;a++)n[a].style.display="none";for(o=document.getElementsByClassName("tablinks"),a=0;a<o.length;a++)o[a].className=o[a].className.replace(" active","");document.getElementById(t).style.display="block",e.currentTarget.className+=" active";var a=$("#"+t).data("img"),s=$("#"+t).data("name"),i=$("#"+t+" #img_tabs");i.css("background-image","url("+a+")"),$("#contentThree #tabs-img").css("background-image","url("+a+")"),$("#contentThree #tabs_text").html(s),console.log(i)}function openTabsRules(e,t){var n,o,a;for(o=document.getElementsByClassName("tabcontentRule"),n=0;n<o.length;n++)o[n].style.display="none";for(a=document.getElementsByClassName("tablinksRule"),n=0;n<a.length;n++)a[n].className=a[n].className.replace(" active","");document.getElementById(t).style.display="block",e.currentTarget.className+=" active"}!function(){var n,o,a,s,i,t,l,r,c;(n=document.querySelector(".wrapper-menu"),o=document.querySelector(".menu"),a=document.querySelector(".menu__list"),s=document.querySelector(".menu__brand"),i=document.querySelectorAll(".menu__item"),t=$(".menu__link"),l=!1,r=function(){if(l){o.classList.remove("menu--active"),a.classList.remove("menu__list--active"),s.classList.remove("menu__brand--active"),n.classList.remove("open"),$("header.nav ul li.logo").css("padding-left","1.5rem");for(e=0,t=i.length;e<t;e++)i[e].classList.remove("menu__item--active");l=!1}else{o.classList.add("menu--active"),a.classList.add("menu__list--active"),s.classList.add("menu__brand--active"),n.classList.add("open"),$("header.nav ul li.logo").css("padding-left","0"),$(window).off("scroll");for(var e=0,t=i.length;e<t;e++)i[e].classList.add("menu__item--active");l=!0}},c=function(){if(l){o.classList.remove("menu--active"),a.classList.remove("menu__list--active"),s.classList.remove("menu__brand--active"),n.classList.remove("open"),$("header.nav ul li.logo").css("padding-left","1.5rem");for(e=0,t=i.length;e<t;e++)i[e].classList.remove("menu__item--active");l=!1}else{o.classList.add("menu--active"),a.classList.add("menu__list--active"),s.classList.add("menu__brand--active"),n.classList.add("open"),$("header.nav ul li.logo").css("padding-left","0"),$(window).off("scroll");for(var e=0,t=i.length;e<t;e++)i[e].classList.add("menu__item--active");l=!0}},{init:function(){!function(){n.addEventListener("click",c,!1);for(var e=0;e<t.length;e++)t[e].addEventListener("click",r,!1)}()}}).init()}(),$(document).on("click",'.footer a[href^="#"]',function(e){e.preventDefault(),$("html, body").animate({scrollTop:$($.attr(this,"href")).offset().top},1500)}),function(r){var c=r.document.documentElement;function o(e,t){var n,o,a=r.pageYOffset,s=a+(n=c.clientHeight,o=r.innerHeight,n<o?o:n),i=e.offsetHeight,l=function(e){for(var t=0,n=0;isNaN(e.offsetTop)||(t+=e.offsetTop),isNaN(e.offsetLeft)||(n+=e.offsetLeft),e=e.offsetParent;);return{top:t,left:n}}(e).top;return l+i*(t=t||0)<=s&&a<=l+i}function t(e){this.options=function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}(this.defaults,e),this._init()}t.prototype={defaults:{axis:"y",distance:"25px",duration:"0.66s",delay:"0s",viewportFactor:.33},_init:function(){var n=this;this.elems=Array.prototype.slice.call(c.querySelectorAll("[data-scrollReveal]")),this.scrolled=!1,this.elems.forEach(function(e,t){n.animate(e)});r.addEventListener("scroll",function(){n.scrolled||(n.scrolled=!0,setTimeout(function(){n._scrollPage()},60))},!1),r.addEventListener("resize",function(){n.resizeTimeout&&clearTimeout(n.resizeTimeout),n.resizeTimeout=setTimeout(function(){n._scrollPage(),n.resizeTimeout=null},200)},!1)},_scrollPage:function(){var n=this;this.elems.forEach(function(e,t){o(e,n.options.viewportFactor)&&n.animate(e)}),this.scrolled=!1},parseLanguage:function(e){var n,o,a,s=e.getAttribute("data-scrollreveal").split(/[, ]+/),i={};return o=[],a=["from","the","and","then","but"],s.forEach(function(e,t){-1<a.indexOf(e)||o.push(e)}),(s=o).forEach(function(e,t){switch(e){case"enter":return"top"!=(n=s[t+1])&&"bottom"!=n||(i.axis="y"),void("left"!=n&&"right"!=n||(i.axis="x"));case"after":case"wait":return void(i.delay=s[t+1]);case"move":return void(i.distance=s[t+1]);case"over":return void(i.duration=s[t+1]);case"trigger":return void(i.eventName=s[t+1]);default:return}}),"top"!=n&&"left"!=n||("undefined"==!_typeof(i.distance)?i.distance="-"+i.distance:i.distance="-"+this.options.distance),i},genCSS:function(e,t){var n=this.parseLanguage(e),o=n.distance||this.options.distance,a=n.duration||this.options.duration,s=n.delay||this.options.delay;return{transition:"-webkit-transition: all "+a+" ease "+s+";-moz-transition: all "+a+" ease "+s+";-o-transition: all "+a+" ease "+s+";transition: all "+a+" ease "+s+";",initial:"-webkit-transform: translate"+(t=n.axis||this.options.axis)+"("+o+");-moz-transform: translate"+t+"("+o+");transform: translate"+t+"("+o+");opacity: 0;",target:"-webkit-transform: translate"+t+"(0);-moz-transform: translate"+t+"(0);transform: translate"+t+"(0);opacity: 1;",totalDuration:1e3*(parseFloat(a)+parseFloat(s))}},animate:function(e){var t=this.genCSS(e);e.getAttribute("data-sr-init")||(e.setAttribute("style",t.initial),e.setAttribute("data-sr-init",!0)),e.getAttribute("data-sr-complete")||o(e,this.options.viewportFactor)&&(e.setAttribute("style",t.target+t.transition),setTimeout(function(){e.removeAttribute("style"),e.setAttribute("data-sr-complete",!0)},t.totalDuration))}},document.addEventListener("DOMContentLoaded",function(e){r.scrollReveal=new t})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
